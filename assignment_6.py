# -*- coding: utf-8 -*-
"""Assignment 6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iH-5tBDXzSBtTxn8Wur8mxB9ROX4HSqh

## **Task-1**


Write a function called even_checker that takes a number as an argument and prints whether
the number is even or odd inside the function.

===================================================================
Example 1:

Function Call:

even_checker(5)

Output:

Odd!!
"""

def even_checker(a):
  if a%2==0:
    print('even!!')
  else:
    print('odd!!')
even_checker(5)

"""## **Task-2**

Write a python function that takes the limit as an argument of the Fibonacci series and prints till
that limit.

===================================================================
Function Call:

fibonacci(10)

Output:

0 1 1 2 3 5 8
"""

def fibonacci(a):
  num1=0
  num2=1
  sum=num1+num2
  print(num1,end=' ')
  print(num2,end=' ')
  while sum<a:
    num1=num2
    num2=sum
    print(sum,end=' ')
    sum=num1+num2


fibonacci(10)

"""## **Task-3**

Write a function called foo_moo that takes a number as an argument and returns the following
statements according to the below mentioned conditions. Then, finally prints the statement in
the function call.

If the number is divisible by 2, it should return "Foo".

If the number is divisible by 3, it should return "Moo".

If the number is divisible by both 2 and 3, it should return "FooMoo".

Otherwise, it returns "Boo".

Example1:

Function Call:

foo_moo(5)

Output:

Boo
"""

def foo_moo(a):
  if a%2==0 and a%3==0:
    print('FooMoo')
  elif a%2==0:
    print('Foo')
  elif a%3==0:
    print('Moo')
  else:
    print('Boo')
foo_moo(6)

"""## **Task-4**

Write a python function that takes a string as an argument. Your task is to calculate the number
of uppercase letters and lowercase letters and print them in the function.

===================================================================

Function Call:

function_name('The quick Sand Man')

Output:

No. of Uppercase characters : 3

No. of Lowercase Characters: 12

"""

def function_name(a):
  a1='abcdefghijklmnopqrstuvwxyz'
  a2='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  count=0
  count1=0
  for i in a:
    if i in a1:
      count+=1
    elif i in a2:
      count1+=1
  print('No. of Uppercase characters :', count1)
  print('No. of Lowercase characters :',count)

function_name('The quick Sand Man')

"""## **Task-5**

Write a function called calculate_tax that takes 3 arguments: your age, salary, and current job
designation.

Your first task is to take these arguments as user input and pass these values to the function.

Your second task is to implement the function and calculate the tax as the following conditions:

NO TAX IF YOU ARE LESS THAN 18 YEARS OLD.

NO TAX IF YOU ARE THE PRESIDENT OF THE COMPANY

No tax if you get paid less than 10,000

5% tax if you get paid between 10K and 20K

10% tax if you get paid more than 20K

Finally return this tax value. Then print the returned value in the function call.

Hints:

Here the job designation is a string, so it can be written in both uppercase and lower cases. So,
you need to check the value ignoring the case.

===================================================================

Example 1:

Input:

16

20000

Student

Function Call:

calculate_tax(16, 20000, 'Student')

Output:

0

"""

def calculate_tax(age, salary,job_designation):

  if age<18 or job_designation=="president" or salary<10000:
    return 0
  elif 10000 <= salary <= 20000:
        return salary * 0.05
  else:
        return salary * 0.1
a=int(input())
b=int(input())
c=input()
print(calculate_tax(a,b,c))

"""## **Task-6**

Write a function which will take 1 argument, number of days.
Your first task is to take the number of days as user input and pass the value to the function.

Your second task is to implement the function and calculate the total number of years, number
of months, and the remaining number of days as output. No need to return any value, print
inside the function.

Note: Assume, each year to be 365 days and month to be 30 days.

Hint(1): Divide and mod the main input to get the desired output.

Hint(2): This task’s calculation is similar to Assignment-1’s seconds to hours, minutes
conversion.

Example 01

Input:

4330

Function Call:

function_name(4330)

Output:

11 years, 10 months and 15 days

"""

def date_calculator(number_of_days):
  year=num//365
  day1=num%365
  month=day1//30
  day=day1%30
  print(year,'years,',month,'months and',day,'days')
num=int(input("Enter the number of days: "))
date_calculator(num)

"""## **Task-7**

Write a function called show_palindrome that takes a number as an argument and then returns
a palindrome string. Finally, prints the returned value in the function call.

Example1:

Function Call:

show_palindrome(5)

Output:

123454321

"""

def show_palindrome(a):
 c=''
 for i in range(1,a+1):
  b=i
  c+=str(b)
 d=c+c[-2::-1]
 return d
print(show_palindrome(5))

"""## **Task-8**

Write a function called show_palindromic_triangle that takes a number as an argument and
prints a Palindromic Triangle in the function.

[Must reuse the show_palindrome() function of the previous task]

===================================================================

Hints(1):

Need to use both print() and print( , end = " ") functions

===================================================================

Example1:

Function Call:

show_palindromic_triangle(3)

Output:
                  
                  
                  
        1
      1 2 1
    1 2 3 2 1


"""

def palindromicPyramid(r):
    for i in range(0,r+1):
        for j in range(i,r+1):
          print(' ',end=' ')
        for k in range(1,i+1):
          print(k,end=' ')
        for l in range(i-1,0,-1):
          print(l,end=' ')
        print()
n=int(input())
palindromicPyramid(n)

"""## **Task-9**

Write a function called area_circumference_generator that takes a radius of a circle as a
function parameter and calculates its circumference and area. Then returns these two results as
a tuple and prints the results using tuple unpacking in the function call according to the given
format.

[Must use tuple packing & unpacking]

===================================================================

Example1:

Function Call:

area_circumference_generator(1)

Output:

(3.141592653589793, 6.283185307179586)

Area of the circle is 3.141592653589793 and circumference is 6.283185307179586
"""

import math
def area_circumference_generator( radius):
  area=math.pi*(radius**2)
  circumference= 2*math.pi*radius
  tuple1=(area,circumference)
  print(tuple1)
  a,b=tuple1
  print('Area of the circle is',a,'and circumference is',b)
area_circumference_generator(1)

"""## **Task-10**

Write a function called make_square that takes a tuple in the parameter as a range of numbers
(starting point and ending point (included)). The function should return a dictionary with the
numbers as keys and its squares as values.

===================================================================

Hints:

You need to declare a dictionary to store the result. You should use the range function to run
the “for loop”.

===================================================================

Example1:

Function Call:

make_square((1,3))

Output:

{1: 1, 2: 4, 3: 9}
"""

def  make_square(tuple1):
    dict1= {}
    a,b=tuple1
    for i in range(a, b+1):
        dict1[i] = i**2
    return dict1

print(make_square((1,3)))

"""## **Task-11**

Write a function called rem_duplicate that takes a tuple in the parameter and return a tuple
removing all the duplicate values. Then print the returned tuple in the function call.

[Cannot use remove() or removed() for this task]

===================================================================

Hints:

Unlike lists, tuples are immutable, so the tuple taken as an argument cannot be modified. But
the list can be modified and lastly for returning the result use type conversion. You need to use
membership operators (in, not in) for preventing adding any duplicates values.

===================================================================

Example 1:

Function Call:

rem_duplicate((1,1,1,2,3,4,5,6,6,6,6,4,0,0,0))

Output:

(1, 2, 3, 4, 5, 6, 0)

"""

def rem_duplicate(tuple1):
  list1=list(tuple1)
  mod_list=[]
  for i in list1:
    if i not in mod_list:
      mod_list.append(i)
      mod_tuple=tuple(mod_list)
  return  mod_tuple
rem_duplicate(("Hi", 1, 2, 3, 3, "Hi",'a', 'a', [1,2]))

"""## **Task-12**

Write a python function that takes a list as an argument. Your task is to create a new list where
each element can be present at max 2 times. Inside the function, print the number of
elements removed from the given list. Finally, return the new list and print the result.

=====================================================

Hint: You may use list_name.count(element) to count the total number of times an element is in
a list. list_name is your new list for this problem.

=====================================================

Function Call:

function_name([1, 2, 3, 3, 3, 3, 4, 5, 8, 8])

Output:

Removed: 2

[1, 2, 3, 3, 4, 5, 8, 8]

"""

def old_list(list1):
    new_list=[]
    count=0
    for elem in list1:
        if new_list.count(elem) < 2:
          new_list.append(elem)
        else:
          count+=1
    print('Removed:',count)
    return new_list
old_list([1, 2, 3, 3, 3, 3, 4, 5, 8, 8])

"""## **Task-13**

Write a python function that will perform the basic calculation (addition, subtraction,
multiplication and division) based on 3 arguments. They are:

Operator ('+', '-', '/', '*')

First Operand (any number)

Second Operand (any number)

Your first task is to take these arguments as user input and pass the values to the function
parameters.

Your second task is to write a function and perform the calculation based on the given operator.

Then, finally return the result in the function call and print the result.

=====================================================

Input:

"+"

10

20

Function Call:

function_name("+", 10, 20)

Output:

30.0

"""

def  calculation(Operator,number1,number2):
  if a=='+':
     result= b+c
  elif a=='-':
     result= b-c
  elif a=='*':
    result= b*c
  elif a=='/':
    result= b/c
  return result
a=input()
b=float(input())
c=float(input())
calculation(a,b,c)

"""## **Task-14**

Write a function which will take 2 arguments. They are:

• Sentence

• Position

Your first task is to take these arguments as user input and pass these values to the function
parameters.

Your second task is to implement the function and remove the characters at the index number
which is divisible by the position (Avoid the index number 0 as it will always be divisible by the
position, so no need to remove the index 0 character). Finally, add the removed characters at
the end of the new string.

Return the value and then finally, print the new string at the function call.

[Cannot use remove() or removed() for this task]

Input:

"I love programming."

3

Function call:

function_name("I love programming.", 3)

Output:

I lveprgrmmngo oai.
"""

def function(sentence,position):
  x=sentence[0]
  y=''
  for i in range(1,len(sentence)):
    if i%position!=0:
      x+=a[i]
    else:
      y+=a[i]
  return x+y
a=input('Enter a sentence: ')
b=int(input('Enter the position: '))
function(a,b)